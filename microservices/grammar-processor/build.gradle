plugins {
    id 'java'
    id("org.springframework.boot") version "3.4.0"
}

group = "by.bsu.sakuuj"
version = "1.0"

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor platform(project(':bom'))
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor 'org.mapstruct:mapstruct-processor'

    compileOnly platform(project(':bom'))
    compileOnly("org.projectlombok:lombok")

    testCompileOnly platform(project(':bom'))
	testCompileOnly("org.projectlombok:lombok")

    testAnnotationProcessor platform(project(':bom'))
	testAnnotationProcessor("org.projectlombok:lombok")

    implementation platform(project(':bom'))
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mapstruct:mapstruct'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

//    implementation "com.github.loki4j:loki-logback-appender:${loki4jVersion}"
//    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
//    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'



    testImplementation 'org.springframework.boot:spring-boot-starter-test'

//    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
}
tasks.named('test') {
    useJUnitPlatform()
}
